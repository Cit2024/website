generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id       String @id @default(cuid())
  username String
  password String
}

model Image {
  id   String @id @default(cuid())
  data Bytes  @db.MediumBlob // Store image binary data
  type String // e.g., "image/jpeg", "image/png"
  size Int // Size of the image in bytes
}

model Media {
  id   String @id @default(cuid())
  data Bytes  @db.LongBlob
  type String // e.g., "PDF", "Video", etc.
  size Int // Size of the media in bytes
}

model News {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  Duration  String
  Active    Boolean
  imageId   String?  @unique
  galleryId String?  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Collaborator {
  id                         String                       @id @default(cuid())
  companyName                String
  primaryPhoneNumber         String
  optionalPhoneNumber        String?
  email                      String?
  location                   String?
  site                       String?
  industrialSector           String
  specialization             String
  experienceProvided         String?
  machineryAndEquipment      String?
  imageId                    String?                      @unique
  experienceProvidedMedia    ExperienceProvidedMedia[]
  machineryAndEquipmentMedia MachineryAndEquipmentMedia[]
  createdAt                  DateTime                     @default(now())
  updatedAt                  DateTime                     @updatedAt
}

model Innovator {
  id                 String           @id @default(uuid())
  name               String
  email              String
  phone              String
  projectTitle       String
  projectDescription String?
  objective          String?
  stageDevelopment   StageDevelopment
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt
}

model ExperienceProvidedMedia {
  id    String @id @default(cuid())
  media String
  collaborator   Collaborator? @relation(fields: [collaboratorId], references: [id])
  collaboratorId String?
}

model MachineryAndEquipmentMedia {
  id             String        @id @default(cuid())
  media          String
  collaborator   Collaborator? @relation(fields: [collaboratorId], references: [id])
  collaboratorId String?
}

enum StageDevelopment {
  STAGE
  PROTOTYPE
  DEVELOPMENT
  TESTING
  RELEASED
}
